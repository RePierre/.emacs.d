#+title: Configure packages that rely on =org-mode=
#+property: header-args :results silent


* Install and configure =org-ref=

As specified in [[https://github.com/jkitchin/org-ref/blob/master/org-ref.org][org-ref manual]].

#+begin_src emacs-lisp
  (use-package helm-bibtex
    :defer t
    :init
    (setq bibtex-completion-bibliography '("~/org/bibliography/references.bib")
          bibtex-completion-library-path '("~/org/bibliography/bibtex-pdfs")
          bibtex-completion-notes-path "~/org/bibliography/helm-bibtex-notes"
          bibtex-completion-notes-template-multiple-files "* ${author-or-editor}, ${title}, ${journal}, (${year}) :${=type=}: \n\nSee [[cite:&${=key=}]]\n"

          bibtex-completion-additional-search-fields '(keywords)
          bibtex-completion-display-formats
          '((article       . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${journal:40}")
            (inbook        . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} Chapter ${chapter:32}")
            (incollection  . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
            (inproceedings . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*} ${booktitle:40}")
            (t             . "${=has-pdf=:1}${=has-note=:1} ${year:4} ${author:36} ${title:*}"))
          bibtex-completion-pdf-open-function
          (lambda (fpath)
            (call-process "open" nil 0 nil fpath))))

  (use-package org-ref
    :defer t
    :init
    (require 'bibtex)
    (setq bibtex-autokey-year-length 4
          bibtex-autokey-name-year-separator "-"
          bibtex-autokey-year-title-separator "-"
          bibtex-autokey-titleword-separator "-"
          bibtex-autokey-titlewords 2
          bibtex-autokey-titlewords-stretch 1
          bibtex-autokey-titleword-length 5)
    (define-key bibtex-mode-map (kbd "H-b") 'org-ref-bibtex-hydra/body)
    (define-key org-mode-map (kbd "C-c ]") 'org-ref-insert-link)
    (define-key org-mode-map (kbd "s-[") 'org-ref-insert-link-hydra/body)
    (require 'org-ref-helm)
    (require 'org-ref-arxiv)
    (require 'org-ref-scopus)
    (require 'org-ref-wos))


  (use-package org-ref-helm
    :defer t
    :load-path (lambda()(expand-file-name "elpa/org-ref" user-emacs-directory))
    :init (setq org-ref-insert-link-function 'org-ref-insert-link-hydra/body
                org-ref-insert-cite-function 'org-ref-cite-insert-helm
                org-ref-insert-label-function 'org-ref-insert-label-link
                org-ref-insert-ref-function 'org-ref-insert-ref-link
                org-ref-cite-onclick-function (lambda (_) (org-ref-citation-hydra/body))))

#+end_src

* Install and configure =org-re-reveal=

#+begin_src emacs-lisp
  (use-package org-re-reveal
    :defer t
    :config
    (progn
      (setq org-re-reveal-root "http://cdn.jsdelivr.net/reveal.js/3.0.0/")))
#+end_src

* Install and configure =org-roam=

#+begin_src emacs-lisp
  (use-package org-roam
    :defer t
    :init
    (setq org-roam-v2-ack t)
    :custom
    (org-roam-directory "~/org/roam")
    :bind (("C-c n l" . org-roam-buffer-toggle)
           ("C-c n f" . org-roam-node-find)
           ("C-c n i" . org-roam-node-insert))
    :config
    (setq org-roam-node-display-template (concat "${title:*} " (propertize "${tags:10}" 'face 'org-tag)))
    (org-roam-db-autosync-mode))
#+end_src

** Install and configure =org-roam-ui=

#+begin_src emacs-lisp
  (use-package org-roam-ui
    :after org-roam
    :defer t
    :config
    (setq org-roam-ui-sync-theme t
          org-roam-ui-follow t
          org-roam-ui-update-on-save t
          org-roam-ui-open-on-start nil))
#+end_src

** Install and configure =org-roam-bibtex=

#+begin_src emacs-lisp
  (use-package org-roam-bibtex
    :after org-roam
    :config
    (require 'org-ref))
#+end_src
